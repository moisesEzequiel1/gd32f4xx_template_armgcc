
Build/Base_Makefile_GD32f4xx.elf:     file format elf32-littlearm


Disassembly of section .text:

08000188 <deregister_tm_clones>:
 8000188:	4803      	ldr	r0, [pc, #12]	@ (8000198 <deregister_tm_clones+0x10>)
 800018a:	4b04      	ldr	r3, [pc, #16]	@ (800019c <deregister_tm_clones+0x14>)
 800018c:	4283      	cmp	r3, r0
 800018e:	d002      	beq.n	8000196 <deregister_tm_clones+0xe>
 8000190:	4b03      	ldr	r3, [pc, #12]	@ (80001a0 <deregister_tm_clones+0x18>)
 8000192:	b103      	cbz	r3, 8000196 <deregister_tm_clones+0xe>
 8000194:	4718      	bx	r3
 8000196:	4770      	bx	lr
 8000198:	20000000 	.word	0x20000000
 800019c:	20000000 	.word	0x20000000
 80001a0:	00000000 	.word	0x00000000

080001a4 <register_tm_clones>:
 80001a4:	4805      	ldr	r0, [pc, #20]	@ (80001bc <register_tm_clones+0x18>)
 80001a6:	4b06      	ldr	r3, [pc, #24]	@ (80001c0 <register_tm_clones+0x1c>)
 80001a8:	1a1b      	subs	r3, r3, r0
 80001aa:	0fd9      	lsrs	r1, r3, #31
 80001ac:	eb01 01a3 	add.w	r1, r1, r3, asr #2
 80001b0:	1049      	asrs	r1, r1, #1
 80001b2:	d002      	beq.n	80001ba <register_tm_clones+0x16>
 80001b4:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <register_tm_clones+0x20>)
 80001b6:	b103      	cbz	r3, 80001ba <register_tm_clones+0x16>
 80001b8:	4718      	bx	r3
 80001ba:	4770      	bx	lr
 80001bc:	20000000 	.word	0x20000000
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c06      	ldr	r4, [pc, #24]	@ (80001e4 <__do_global_dtors_aux+0x1c>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b943      	cbnz	r3, 80001e2 <__do_global_dtors_aux+0x1a>
 80001d0:	f7ff ffda 	bl	8000188 <deregister_tm_clones>
 80001d4:	4b04      	ldr	r3, [pc, #16]	@ (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	b113      	cbz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d8:	4804      	ldr	r0, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x24>)
 80001da:	f3af 8000 	nop.w
 80001de:	2301      	movs	r3, #1
 80001e0:	7023      	strb	r3, [r4, #0]
 80001e2:	bd10      	pop	{r4, pc}
 80001e4:	20000000 	.word	0x20000000
 80001e8:	00000000 	.word	0x00000000
 80001ec:	080004ec 	.word	0x080004ec

080001f0 <frame_dummy>:
 80001f0:	b508      	push	{r3, lr}
 80001f2:	4b04      	ldr	r3, [pc, #16]	@ (8000204 <frame_dummy+0x14>)
 80001f4:	b11b      	cbz	r3, 80001fe <frame_dummy+0xe>
 80001f6:	4904      	ldr	r1, [pc, #16]	@ (8000208 <frame_dummy+0x18>)
 80001f8:	4804      	ldr	r0, [pc, #16]	@ (800020c <frame_dummy+0x1c>)
 80001fa:	f3af 8000 	nop.w
 80001fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000202:	e7cf      	b.n	80001a4 <register_tm_clones>
 8000204:	00000000 	.word	0x00000000
 8000208:	20000004 	.word	0x20000004
 800020c:	080004ec 	.word	0x080004ec

08000210 <__libc_init_array>:
 8000210:	b570      	push	{r4, r5, r6, lr}
 8000212:	4b0f      	ldr	r3, [pc, #60]	@ (8000250 <__libc_init_array+0x40>)
 8000214:	4d0f      	ldr	r5, [pc, #60]	@ (8000254 <__libc_init_array+0x44>)
 8000216:	42ab      	cmp	r3, r5
 8000218:	eba3 0605 	sub.w	r6, r3, r5
 800021c:	d007      	beq.n	800022e <__libc_init_array+0x1e>
 800021e:	10b6      	asrs	r6, r6, #2
 8000220:	2400      	movs	r4, #0
 8000222:	f855 3b04 	ldr.w	r3, [r5], #4
 8000226:	3401      	adds	r4, #1
 8000228:	4798      	blx	r3
 800022a:	42a6      	cmp	r6, r4
 800022c:	d8f9      	bhi.n	8000222 <__libc_init_array+0x12>
 800022e:	f000 f95d 	bl	80004ec <_init>
 8000232:	4d09      	ldr	r5, [pc, #36]	@ (8000258 <__libc_init_array+0x48>)
 8000234:	4b09      	ldr	r3, [pc, #36]	@ (800025c <__libc_init_array+0x4c>)
 8000236:	1b5e      	subs	r6, r3, r5
 8000238:	42ab      	cmp	r3, r5
 800023a:	ea4f 06a6 	mov.w	r6, r6, asr #2
 800023e:	d006      	beq.n	800024e <__libc_init_array+0x3e>
 8000240:	2400      	movs	r4, #0
 8000242:	f855 3b04 	ldr.w	r3, [r5], #4
 8000246:	3401      	adds	r4, #1
 8000248:	4798      	blx	r3
 800024a:	42a6      	cmp	r6, r4
 800024c:	d8f9      	bhi.n	8000242 <__libc_init_array+0x32>
 800024e:	bd70      	pop	{r4, r5, r6, pc}
 8000250:	08000504 	.word	0x08000504
 8000254:	08000504 	.word	0x08000504
 8000258:	08000504 	.word	0x08000504
 800025c:	0800050c 	.word	0x0800050c

08000260 <atexit>:
 8000260:	2300      	movs	r3, #0
 8000262:	4601      	mov	r1, r0
 8000264:	461a      	mov	r2, r3
 8000266:	4618      	mov	r0, r3
 8000268:	f000 b814 	b.w	8000294 <__register_exitproc>

0800026c <__libc_fini_array>:
 800026c:	b538      	push	{r3, r4, r5, lr}
 800026e:	4d07      	ldr	r5, [pc, #28]	@ (800028c <__libc_fini_array+0x20>)
 8000270:	4c07      	ldr	r4, [pc, #28]	@ (8000290 <__libc_fini_array+0x24>)
 8000272:	1b2c      	subs	r4, r5, r4
 8000274:	10a4      	asrs	r4, r4, #2
 8000276:	d005      	beq.n	8000284 <__libc_fini_array+0x18>
 8000278:	3c01      	subs	r4, #1
 800027a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800027e:	4798      	blx	r3
 8000280:	2c00      	cmp	r4, #0
 8000282:	d1f9      	bne.n	8000278 <__libc_fini_array+0xc>
 8000284:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000288:	f000 b936 	b.w	80004f8 <_fini>
 800028c:	08000510 	.word	0x08000510
 8000290:	0800050c 	.word	0x0800050c

08000294 <__register_exitproc>:
 8000294:	b470      	push	{r4, r5, r6}
 8000296:	4d16      	ldr	r5, [pc, #88]	@ (80002f0 <__register_exitproc+0x5c>)
 8000298:	682c      	ldr	r4, [r5, #0]
 800029a:	b31c      	cbz	r4, 80002e4 <__register_exitproc+0x50>
 800029c:	6865      	ldr	r5, [r4, #4]
 800029e:	2d1f      	cmp	r5, #31
 80002a0:	dc23      	bgt.n	80002ea <__register_exitproc+0x56>
 80002a2:	b938      	cbnz	r0, 80002b4 <__register_exitproc+0x20>
 80002a4:	1cab      	adds	r3, r5, #2
 80002a6:	3501      	adds	r5, #1
 80002a8:	6065      	str	r5, [r4, #4]
 80002aa:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 80002ae:	2000      	movs	r0, #0
 80002b0:	bc70      	pop	{r4, r5, r6}
 80002b2:	4770      	bx	lr
 80002b4:	eb04 0c85 	add.w	ip, r4, r5, lsl #2
 80002b8:	2802      	cmp	r0, #2
 80002ba:	f8cc 2088 	str.w	r2, [ip, #136]	@ 0x88
 80002be:	f8d4 6188 	ldr.w	r6, [r4, #392]	@ 0x188
 80002c2:	f04f 0201 	mov.w	r2, #1
 80002c6:	fa02 f205 	lsl.w	r2, r2, r5
 80002ca:	ea46 0602 	orr.w	r6, r6, r2
 80002ce:	f8c4 6188 	str.w	r6, [r4, #392]	@ 0x188
 80002d2:	f8cc 3108 	str.w	r3, [ip, #264]	@ 0x108
 80002d6:	d1e5      	bne.n	80002a4 <__register_exitproc+0x10>
 80002d8:	f8d4 318c 	ldr.w	r3, [r4, #396]	@ 0x18c
 80002dc:	4313      	orrs	r3, r2
 80002de:	f8c4 318c 	str.w	r3, [r4, #396]	@ 0x18c
 80002e2:	e7df      	b.n	80002a4 <__register_exitproc+0x10>
 80002e4:	4c03      	ldr	r4, [pc, #12]	@ (80002f4 <__register_exitproc+0x60>)
 80002e6:	602c      	str	r4, [r5, #0]
 80002e8:	e7d8      	b.n	800029c <__register_exitproc+0x8>
 80002ea:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80002ee:	e7df      	b.n	80002b0 <__register_exitproc+0x1c>
 80002f0:	2000001c 	.word	0x2000001c
 80002f4:	20000020 	.word	0x20000020

080002f8 <SystemInit>:
    \param[in]  none
    \param[out] none
    \retval     none
*/
void SystemInit (void)
{
 80002f8:	b082      	sub	sp, #8
    /* FPU settings */
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80002fa:	4a5f      	ldr	r2, [pc, #380]	@ (8000478 <SystemInit+0x180>)
 80002fc:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 8000300:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000304:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
#endif
    /* Reset the RCU clock configuration to the default reset state */
    /* Set IRC16MEN bit */
    RCU_CTL |= RCU_CTL_IRC16MEN;
 8000308:	4a5c      	ldr	r2, [pc, #368]	@ (800047c <SystemInit+0x184>)
 800030a:	f8d2 3800 	ldr.w	r3, [r2, #2048]	@ 0x800
 800030e:	f043 0301 	orr.w	r3, r3, #1
 8000312:	f8c2 3800 	str.w	r3, [r2, #2048]	@ 0x800
    while(0U == (RCU_CTL & RCU_CTL_IRC16MSTB)){
 8000316:	f8d2 3800 	ldr.w	r3, [r2, #2048]	@ 0x800
 800031a:	f013 0f02 	tst.w	r3, #2
 800031e:	d0fa      	beq.n	8000316 <SystemInit+0x1e>
    }
    RCU_MODIFY(0x50);
 8000320:	4a56      	ldr	r2, [pc, #344]	@ (800047c <SystemInit+0x184>)
 8000322:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8000326:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800032a:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
 800032e:	2300      	movs	r3, #0
 8000330:	9301      	str	r3, [sp, #4]
 8000332:	9b01      	ldr	r3, [sp, #4]
 8000334:	2b4f      	cmp	r3, #79	@ 0x4f
 8000336:	d805      	bhi.n	8000344 <SystemInit+0x4c>
 8000338:	9b01      	ldr	r3, [sp, #4]
 800033a:	3301      	adds	r3, #1
 800033c:	9301      	str	r3, [sp, #4]
 800033e:	9b01      	ldr	r3, [sp, #4]
 8000340:	2b4f      	cmp	r3, #79	@ 0x4f
 8000342:	d9f9      	bls.n	8000338 <SystemInit+0x40>
 8000344:	4a4d      	ldr	r2, [pc, #308]	@ (800047c <SystemInit+0x184>)
 8000346:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 800034a:	f043 0390 	orr.w	r3, r3, #144	@ 0x90
 800034e:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
 8000352:	2300      	movs	r3, #0
 8000354:	9301      	str	r3, [sp, #4]
 8000356:	9b01      	ldr	r3, [sp, #4]
 8000358:	2b4f      	cmp	r3, #79	@ 0x4f
 800035a:	d805      	bhi.n	8000368 <SystemInit+0x70>
 800035c:	9b01      	ldr	r3, [sp, #4]
 800035e:	3301      	adds	r3, #1
 8000360:	9301      	str	r3, [sp, #4]
 8000362:	9b01      	ldr	r3, [sp, #4]
 8000364:	2b4f      	cmp	r3, #79	@ 0x4f
 8000366:	d9f9      	bls.n	800035c <SystemInit+0x64>
    
    RCU_CFG0 &= ~RCU_CFG0_SCS;
 8000368:	4b44      	ldr	r3, [pc, #272]	@ (800047c <SystemInit+0x184>)
 800036a:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 800036e:	f022 0203 	bic.w	r2, r2, #3
 8000372:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
    
    /* Reset HXTALEN, CKMEN and PLLEN bits */
    RCU_CTL &= ~(RCU_CTL_PLLEN | RCU_CTL_CKMEN | RCU_CTL_HXTALEN);
 8000376:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 800037a:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 800037e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8000382:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800

    /* Reset HSEBYP bit */
    RCU_CTL &= ~(RCU_CTL_HXTALBPS);
 8000386:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 800038a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800038e:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
    
    /* Reset CFG0 register */
    RCU_CFG0 = 0x00000000U;
 8000392:	2200      	movs	r2, #0
 8000394:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808

    /* wait until IRC16M is selected as system clock */
    while(0 != (RCU_CFG0 & RCU_SCSS_IRC16M)){
 8000398:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
    }

    /* Reset PLLCFGR register */
    RCU_PLL = 0x24003010U;
 800039c:	4938      	ldr	r1, [pc, #224]	@ (8000480 <SystemInit+0x188>)
 800039e:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804

    /* Disable all interrupts */
    RCU_INT = 0x00000000U;
 80003a2:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
{
    uint32_t timeout = 0U;
    uint32_t stab_flag = 0U;
    
    /* enable HXTAL */
    RCU_CTL |= RCU_CTL_HXTALEN;
 80003a6:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80003aa:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80003ae:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 80003b2:	f64f 73ff 	movw	r3, #65535	@ 0xffff

    /* wait until HXTAL is stable or the startup time is longer than HXTAL_STARTUP_TIMEOUT */
    do{
        timeout++;
        stab_flag = (RCU_CTL & RCU_CTL_HXTALSTB);
 80003b6:	4931      	ldr	r1, [pc, #196]	@ (800047c <SystemInit+0x184>)
 80003b8:	f8d1 2800 	ldr.w	r2, [r1, #2048]	@ 0x800
    }while((0U == stab_flag) && (HXTAL_STARTUP_TIMEOUT != timeout));
 80003bc:	f412 3f00 	tst.w	r2, #131072	@ 0x20000
 80003c0:	d101      	bne.n	80003c6 <SystemInit+0xce>
 80003c2:	3b01      	subs	r3, #1
 80003c4:	d1f8      	bne.n	80003b8 <SystemInit+0xc0>

    /* if fail */
    if(0U == (RCU_CTL & RCU_CTL_HXTALSTB)){
 80003c6:	4b2d      	ldr	r3, [pc, #180]	@ (800047c <SystemInit+0x184>)
 80003c8:	f8d3 3800 	ldr.w	r3, [r3, #2048]	@ 0x800
 80003cc:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 80003d0:	d100      	bne.n	80003d4 <SystemInit+0xdc>
        while(1){
 80003d2:	e7fe      	b.n	80003d2 <SystemInit+0xda>
        }
    }
         
    RCU_APB1EN |= RCU_APB1EN_PMUEN;
 80003d4:	4b29      	ldr	r3, [pc, #164]	@ (800047c <SystemInit+0x184>)
 80003d6:	f8d3 2840 	ldr.w	r2, [r3, #2112]	@ 0x840
 80003da:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80003de:	f8c3 2840 	str.w	r2, [r3, #2112]	@ 0x840
    PMU_CTL |= PMU_CTL_LDOVS;
 80003e2:	4928      	ldr	r1, [pc, #160]	@ (8000484 <SystemInit+0x18c>)
 80003e4:	680a      	ldr	r2, [r1, #0]
 80003e6:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 80003ea:	600a      	str	r2, [r1, #0]

    /* HXTAL is stable */
    /* AHB = SYSCLK */
    RCU_CFG0 |= RCU_AHB_CKSYS_DIV1;
 80003ec:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80003f0:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
    /* APB2 = AHB/2 */
    RCU_CFG0 |= RCU_APB2_CKAHB_DIV2;
 80003f4:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80003f8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80003fc:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
    /* APB1 = AHB/4 */
    RCU_CFG0 |= RCU_APB1_CKAHB_DIV4;
 8000400:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8000404:	f442 52a0 	orr.w	r2, r2, #5120	@ 0x1400
 8000408:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808

    /* Configure the main PLL, PSC = 25, PLL_N = 400, PLL_P = 2, PLL_Q = 9 */ 
    RCU_PLL = (25U | (400U << 6U) | (((2U >> 1U) - 1U) << 16U) |
 800040c:	4a1e      	ldr	r2, [pc, #120]	@ (8000488 <SystemInit+0x190>)
 800040e:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
                   (RCU_PLLSRC_HXTAL) | (9U << 24U));

    /* enable PLL */
    RCU_CTL |= RCU_CTL_PLLEN;
 8000412:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8000416:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 800041a:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800

    /* wait until PLL is stable */
    while(0U == (RCU_CTL & RCU_CTL_PLLSTB)){
 800041e:	461a      	mov	r2, r3
 8000420:	f8d2 3800 	ldr.w	r3, [r2, #2048]	@ 0x800
 8000424:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8000428:	d0fa      	beq.n	8000420 <SystemInit+0x128>
    }
    
    /* Enable the high-drive to extend the clock frequency to 200 Mhz */
    PMU_CTL |= PMU_CTL_HDEN;
 800042a:	4a16      	ldr	r2, [pc, #88]	@ (8000484 <SystemInit+0x18c>)
 800042c:	6813      	ldr	r3, [r2, #0]
 800042e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000432:	6013      	str	r3, [r2, #0]
    while(0U == (PMU_CS & PMU_CS_HDRF)){
 8000434:	6853      	ldr	r3, [r2, #4]
 8000436:	f413 3f80 	tst.w	r3, #65536	@ 0x10000
 800043a:	d0fb      	beq.n	8000434 <SystemInit+0x13c>
    }
    
    /* select the high-drive mode */
    PMU_CTL |= PMU_CTL_HDS;
 800043c:	4a11      	ldr	r2, [pc, #68]	@ (8000484 <SystemInit+0x18c>)
 800043e:	6813      	ldr	r3, [r2, #0]
 8000440:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000444:	6013      	str	r3, [r2, #0]
    while(0U == (PMU_CS & PMU_CS_HDSRF)){
 8000446:	6853      	ldr	r3, [r2, #4]
 8000448:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 800044c:	d0fb      	beq.n	8000446 <SystemInit+0x14e>
    } 
    
    /* select PLL as system clock */
    RCU_CFG0 &= ~RCU_CFG0_SCS;
 800044e:	4b0b      	ldr	r3, [pc, #44]	@ (800047c <SystemInit+0x184>)
 8000450:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8000454:	f022 0203 	bic.w	r2, r2, #3
 8000458:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
    RCU_CFG0 |= RCU_CKSYSSRC_PLLP;
 800045c:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8000460:	f042 0202 	orr.w	r2, r2, #2
 8000464:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808

    /* wait until PLL is selected as system clock */
    while(0U == (RCU_CFG0 & RCU_SCSS_PLLP)){
 8000468:	461a      	mov	r2, r3
 800046a:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 800046e:	f013 0f08 	tst.w	r3, #8
 8000472:	d0fa      	beq.n	800046a <SystemInit+0x172>
}
 8000474:	b002      	add	sp, #8
 8000476:	4770      	bx	lr
 8000478:	e000ed00 	.word	0xe000ed00
 800047c:	40023000 	.word	0x40023000
 8000480:	24003010 	.word	0x24003010
 8000484:	40007000 	.word	0x40007000
 8000488:	09406419 	.word	0x09406419

0800048c <Reset_Handler>:
 800048c:	2100      	movs	r1, #0
 800048e:	e003      	b.n	8000498 <LoopCopyDataInit>

08000490 <CopyDataInit>:
 8000490:	4b0b      	ldr	r3, [pc, #44]	@ (80004c0 <LoopFillZerobss+0x14>)
 8000492:	585b      	ldr	r3, [r3, r1]
 8000494:	5043      	str	r3, [r0, r1]
 8000496:	3104      	adds	r1, #4

08000498 <LoopCopyDataInit>:
 8000498:	480a      	ldr	r0, [pc, #40]	@ (80004c4 <LoopFillZerobss+0x18>)
 800049a:	4b0b      	ldr	r3, [pc, #44]	@ (80004c8 <LoopFillZerobss+0x1c>)
 800049c:	1842      	adds	r2, r0, r1
 800049e:	429a      	cmp	r2, r3
 80004a0:	d3f6      	bcc.n	8000490 <CopyDataInit>
 80004a2:	4a0a      	ldr	r2, [pc, #40]	@ (80004cc <LoopFillZerobss+0x20>)
 80004a4:	e002      	b.n	80004ac <LoopFillZerobss>

080004a6 <FillZerobss>:
 80004a6:	2300      	movs	r3, #0
 80004a8:	6013      	str	r3, [r2, #0]
 80004aa:	3204      	adds	r2, #4

080004ac <LoopFillZerobss>:
 80004ac:	4b08      	ldr	r3, [pc, #32]	@ (80004d0 <LoopFillZerobss+0x24>)
 80004ae:	429a      	cmp	r2, r3
 80004b0:	d3f9      	bcc.n	80004a6 <FillZerobss>
 80004b2:	f7ff ff21 	bl	80002f8 <SystemInit>
 80004b6:	f7ff feab 	bl	8000210 <__libc_init_array>
 80004ba:	f000 f80c 	bl	80004d6 <main>
 80004be:	4770      	bx	lr
 80004c0:	08000510 	.word	0x08000510
 80004c4:	20000000 	.word	0x20000000
 80004c8:	20000000 	.word	0x20000000
 80004cc:	20000000 	.word	0x20000000
 80004d0:	200001b0 	.word	0x200001b0

080004d4 <ADC_IRQHandler>:
 80004d4:	e7fe      	b.n	80004d4 <ADC_IRQHandler>

080004d6 <main>:
int main(void)
{

    // systick_config();
    // led_init();
    while(1) {
 80004d6:	e7fe      	b.n	80004d6 <main>

080004d8 <register_fini>:
 80004d8:	4b02      	ldr	r3, [pc, #8]	@ (80004e4 <register_fini+0xc>)
 80004da:	b113      	cbz	r3, 80004e2 <register_fini+0xa>
 80004dc:	4802      	ldr	r0, [pc, #8]	@ (80004e8 <register_fini+0x10>)
 80004de:	f7ff bebf 	b.w	8000260 <atexit>
 80004e2:	4770      	bx	lr
 80004e4:	00000000 	.word	0x00000000
 80004e8:	0800026d 	.word	0x0800026d

080004ec <_init>:
 80004ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ee:	bf00      	nop
 80004f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004f2:	bc08      	pop	{r3}
 80004f4:	469e      	mov	lr, r3
 80004f6:	4770      	bx	lr

080004f8 <_fini>:
 80004f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004fa:	bf00      	nop
 80004fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004fe:	bc08      	pop	{r3}
 8000500:	469e      	mov	lr, r3
 8000502:	4770      	bx	lr
