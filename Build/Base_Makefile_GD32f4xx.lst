
Build/Base_Makefile_GD32f4xx.elf:     file format elf32-littlearm


Disassembly of section .text:

08000000 <__Vectors>:
 8000000:	20030000 	.word	0x20030000
 8000004:	080003a5 	.word	0x080003a5
 8000008:	080003cd 	.word	0x080003cd
 800000c:	080003cd 	.word	0x080003cd
 8000010:	080003cd 	.word	0x080003cd
 8000014:	080003cd 	.word	0x080003cd
 8000018:	080003cd 	.word	0x080003cd
	...
 800002c:	080003cd 	.word	0x080003cd
 8000030:	080003cd 	.word	0x080003cd
 8000034:	00000000 	.word	0x00000000
 8000038:	080003cd 	.word	0x080003cd
 800003c:	080003cd 	.word	0x080003cd
 8000040:	080003cd 	.word	0x080003cd
 8000044:	080003cd 	.word	0x080003cd
 8000048:	080003cd 	.word	0x080003cd
 800004c:	080003cd 	.word	0x080003cd
 8000050:	080003cd 	.word	0x080003cd
 8000054:	080003cd 	.word	0x080003cd
 8000058:	080003cd 	.word	0x080003cd
 800005c:	080003cd 	.word	0x080003cd
 8000060:	080003cd 	.word	0x080003cd
 8000064:	080003cd 	.word	0x080003cd
 8000068:	080003cd 	.word	0x080003cd
 800006c:	080003cd 	.word	0x080003cd
 8000070:	080003cd 	.word	0x080003cd
 8000074:	080003cd 	.word	0x080003cd
 8000078:	080003cd 	.word	0x080003cd
 800007c:	080003cd 	.word	0x080003cd
 8000080:	080003cd 	.word	0x080003cd
 8000084:	080003cd 	.word	0x080003cd
 8000088:	080003cd 	.word	0x080003cd
 800008c:	080003cd 	.word	0x080003cd
 8000090:	080003cd 	.word	0x080003cd
 8000094:	080003cd 	.word	0x080003cd
 8000098:	080003cd 	.word	0x080003cd
 800009c:	080003cd 	.word	0x080003cd
 80000a0:	080003cd 	.word	0x080003cd
 80000a4:	080003cd 	.word	0x080003cd
 80000a8:	080003cd 	.word	0x080003cd
 80000ac:	080003cd 	.word	0x080003cd
 80000b0:	080003cd 	.word	0x080003cd
 80000b4:	080003cd 	.word	0x080003cd
 80000b8:	080003cd 	.word	0x080003cd
 80000bc:	080003cd 	.word	0x080003cd
 80000c0:	080003cd 	.word	0x080003cd
 80000c4:	080003cd 	.word	0x080003cd
 80000c8:	080003cd 	.word	0x080003cd
 80000cc:	080003cd 	.word	0x080003cd
 80000d0:	080003cd 	.word	0x080003cd
 80000d4:	080003cd 	.word	0x080003cd
 80000d8:	080003cd 	.word	0x080003cd
 80000dc:	080003cd 	.word	0x080003cd
 80000e0:	080003cd 	.word	0x080003cd
 80000e4:	080003cd 	.word	0x080003cd
 80000e8:	080003cd 	.word	0x080003cd
 80000ec:	080003cd 	.word	0x080003cd
 80000f0:	080003cd 	.word	0x080003cd
 80000f4:	080003cd 	.word	0x080003cd
 80000f8:	080003cd 	.word	0x080003cd
 80000fc:	080003cd 	.word	0x080003cd
 8000100:	080003cd 	.word	0x080003cd
 8000104:	080003cd 	.word	0x080003cd
 8000108:	080003cd 	.word	0x080003cd
 800010c:	080003cd 	.word	0x080003cd
 8000110:	080003cd 	.word	0x080003cd
 8000114:	080003cd 	.word	0x080003cd
 8000118:	080003cd 	.word	0x080003cd
 800011c:	080003cd 	.word	0x080003cd
 8000120:	080003cd 	.word	0x080003cd
 8000124:	080003cd 	.word	0x080003cd
 8000128:	080003cd 	.word	0x080003cd
 800012c:	080003cd 	.word	0x080003cd
 8000130:	080003cd 	.word	0x080003cd
 8000134:	080003cd 	.word	0x080003cd
 8000138:	080003cd 	.word	0x080003cd
 800013c:	080003cd 	.word	0x080003cd
 8000140:	080003cd 	.word	0x080003cd
 8000144:	080003cd 	.word	0x080003cd
 8000148:	080003cd 	.word	0x080003cd
 800014c:	080003cd 	.word	0x080003cd
 8000150:	080003cd 	.word	0x080003cd
 8000154:	080003cd 	.word	0x080003cd
 8000158:	080003cd 	.word	0x080003cd
 800015c:	080003cd 	.word	0x080003cd
 8000160:	080003cd 	.word	0x080003cd
 8000164:	080003cd 	.word	0x080003cd
 8000168:	080003cd 	.word	0x080003cd
 800016c:	080003cd 	.word	0x080003cd
 8000170:	080003cd 	.word	0x080003cd
 8000174:	080003cd 	.word	0x080003cd
 8000178:	080003cd 	.word	0x080003cd
 800017c:	00000000 	.word	0x00000000
 8000180:	080003cd 	.word	0x080003cd
 8000184:	080003cd 	.word	0x080003cd

08000188 <deregister_tm_clones>:
 8000188:	4803      	ldr	r0, [pc, #12]	@ (8000198 <deregister_tm_clones+0x10>)
 800018a:	4b04      	ldr	r3, [pc, #16]	@ (800019c <deregister_tm_clones+0x14>)
 800018c:	4283      	cmp	r3, r0
 800018e:	d002      	beq.n	8000196 <deregister_tm_clones+0xe>
 8000190:	4b03      	ldr	r3, [pc, #12]	@ (80001a0 <deregister_tm_clones+0x18>)
 8000192:	b103      	cbz	r3, 8000196 <deregister_tm_clones+0xe>
 8000194:	4718      	bx	r3
 8000196:	4770      	bx	lr
 8000198:	2000000c 	.word	0x2000000c
 800019c:	2000000c 	.word	0x2000000c
 80001a0:	00000000 	.word	0x00000000

080001a4 <register_tm_clones>:
 80001a4:	4805      	ldr	r0, [pc, #20]	@ (80001bc <register_tm_clones+0x18>)
 80001a6:	4b06      	ldr	r3, [pc, #24]	@ (80001c0 <register_tm_clones+0x1c>)
 80001a8:	1a1b      	subs	r3, r3, r0
 80001aa:	0fd9      	lsrs	r1, r3, #31
 80001ac:	eb01 01a3 	add.w	r1, r1, r3, asr #2
 80001b0:	1049      	asrs	r1, r1, #1
 80001b2:	d002      	beq.n	80001ba <register_tm_clones+0x16>
 80001b4:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <register_tm_clones+0x20>)
 80001b6:	b103      	cbz	r3, 80001ba <register_tm_clones+0x16>
 80001b8:	4718      	bx	r3
 80001ba:	4770      	bx	lr
 80001bc:	2000000c 	.word	0x2000000c
 80001c0:	2000000c 	.word	0x2000000c
 80001c4:	00000000 	.word	0x00000000

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c06      	ldr	r4, [pc, #24]	@ (80001e4 <__do_global_dtors_aux+0x1c>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b943      	cbnz	r3, 80001e2 <__do_global_dtors_aux+0x1a>
 80001d0:	f7ff ffda 	bl	8000188 <deregister_tm_clones>
 80001d4:	4b04      	ldr	r3, [pc, #16]	@ (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	b113      	cbz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d8:	4804      	ldr	r0, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x24>)
 80001da:	f3af 8000 	nop.w
 80001de:	2301      	movs	r3, #1
 80001e0:	7023      	strb	r3, [r4, #0]
 80001e2:	bd10      	pop	{r4, pc}
 80001e4:	2000000c 	.word	0x2000000c
 80001e8:	00000000 	.word	0x00000000
 80001ec:	08000498 	.word	0x08000498

080001f0 <frame_dummy>:
 80001f0:	b508      	push	{r3, lr}
 80001f2:	4b04      	ldr	r3, [pc, #16]	@ (8000204 <frame_dummy+0x14>)
 80001f4:	b11b      	cbz	r3, 80001fe <frame_dummy+0xe>
 80001f6:	4904      	ldr	r1, [pc, #16]	@ (8000208 <frame_dummy+0x18>)
 80001f8:	4804      	ldr	r0, [pc, #16]	@ (800020c <frame_dummy+0x1c>)
 80001fa:	f3af 8000 	nop.w
 80001fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000202:	e7cf      	b.n	80001a4 <register_tm_clones>
 8000204:	00000000 	.word	0x00000000
 8000208:	20000010 	.word	0x20000010
 800020c:	08000498 	.word	0x08000498

08000210 <SystemInit>:
    \param[in]  none
    \param[out] none
    \retval     none
*/
void SystemInit (void)
{
 8000210:	b082      	sub	sp, #8
    /* FPU settings */
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000212:	4a5f      	ldr	r2, [pc, #380]	@ (8000390 <SystemInit+0x180>)
 8000214:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 8000218:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800021c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
#endif
    /* Reset the RCU clock configuration to the default reset state */
    /* Set IRC16MEN bit */
    RCU_CTL |= RCU_CTL_IRC16MEN;
 8000220:	4a5c      	ldr	r2, [pc, #368]	@ (8000394 <SystemInit+0x184>)
 8000222:	f8d2 3800 	ldr.w	r3, [r2, #2048]	@ 0x800
 8000226:	f043 0301 	orr.w	r3, r3, #1
 800022a:	f8c2 3800 	str.w	r3, [r2, #2048]	@ 0x800
    while(0U == (RCU_CTL & RCU_CTL_IRC16MSTB)){
 800022e:	f8d2 3800 	ldr.w	r3, [r2, #2048]	@ 0x800
 8000232:	f013 0f02 	tst.w	r3, #2
 8000236:	d0fa      	beq.n	800022e <SystemInit+0x1e>
    }
    RCU_MODIFY(0x50);
 8000238:	4a56      	ldr	r2, [pc, #344]	@ (8000394 <SystemInit+0x184>)
 800023a:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 800023e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000242:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
 8000246:	2300      	movs	r3, #0
 8000248:	9301      	str	r3, [sp, #4]
 800024a:	9b01      	ldr	r3, [sp, #4]
 800024c:	2b4f      	cmp	r3, #79	@ 0x4f
 800024e:	d805      	bhi.n	800025c <SystemInit+0x4c>
 8000250:	9b01      	ldr	r3, [sp, #4]
 8000252:	3301      	adds	r3, #1
 8000254:	9301      	str	r3, [sp, #4]
 8000256:	9b01      	ldr	r3, [sp, #4]
 8000258:	2b4f      	cmp	r3, #79	@ 0x4f
 800025a:	d9f9      	bls.n	8000250 <SystemInit+0x40>
 800025c:	4a4d      	ldr	r2, [pc, #308]	@ (8000394 <SystemInit+0x184>)
 800025e:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8000262:	f043 0390 	orr.w	r3, r3, #144	@ 0x90
 8000266:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
 800026a:	2300      	movs	r3, #0
 800026c:	9301      	str	r3, [sp, #4]
 800026e:	9b01      	ldr	r3, [sp, #4]
 8000270:	2b4f      	cmp	r3, #79	@ 0x4f
 8000272:	d805      	bhi.n	8000280 <SystemInit+0x70>
 8000274:	9b01      	ldr	r3, [sp, #4]
 8000276:	3301      	adds	r3, #1
 8000278:	9301      	str	r3, [sp, #4]
 800027a:	9b01      	ldr	r3, [sp, #4]
 800027c:	2b4f      	cmp	r3, #79	@ 0x4f
 800027e:	d9f9      	bls.n	8000274 <SystemInit+0x64>
    
    RCU_CFG0 &= ~RCU_CFG0_SCS;
 8000280:	4b44      	ldr	r3, [pc, #272]	@ (8000394 <SystemInit+0x184>)
 8000282:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8000286:	f022 0203 	bic.w	r2, r2, #3
 800028a:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
    
    /* Reset HXTALEN, CKMEN and PLLEN bits */
    RCU_CTL &= ~(RCU_CTL_PLLEN | RCU_CTL_CKMEN | RCU_CTL_HXTALEN);
 800028e:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8000292:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 8000296:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800029a:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800

    /* Reset HSEBYP bit */
    RCU_CTL &= ~(RCU_CTL_HXTALBPS);
 800029e:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80002a2:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80002a6:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
    
    /* Reset CFG0 register */
    RCU_CFG0 = 0x00000000U;
 80002aa:	2200      	movs	r2, #0
 80002ac:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808

    /* wait until IRC16M is selected as system clock */
    while(0 != (RCU_CFG0 & RCU_SCSS_IRC16M)){
 80002b0:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
    }

    /* Reset PLLCFGR register */
    RCU_PLL = 0x24003010U;
 80002b4:	4938      	ldr	r1, [pc, #224]	@ (8000398 <SystemInit+0x188>)
 80002b6:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804

    /* Disable all interrupts */
    RCU_INT = 0x00000000U;
 80002ba:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
{
    uint32_t timeout = 0U;
    uint32_t stab_flag = 0U;
    
    /* enable HXTAL */
    RCU_CTL |= RCU_CTL_HXTALEN;
 80002be:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80002c2:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80002c6:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 80002ca:	f64f 73ff 	movw	r3, #65535	@ 0xffff

    /* wait until HXTAL is stable or the startup time is longer than HXTAL_STARTUP_TIMEOUT */
    do{
        timeout++;
        stab_flag = (RCU_CTL & RCU_CTL_HXTALSTB);
 80002ce:	4931      	ldr	r1, [pc, #196]	@ (8000394 <SystemInit+0x184>)
 80002d0:	f8d1 2800 	ldr.w	r2, [r1, #2048]	@ 0x800
    }while((0U == stab_flag) && (HXTAL_STARTUP_TIMEOUT != timeout));
 80002d4:	f412 3f00 	tst.w	r2, #131072	@ 0x20000
 80002d8:	d101      	bne.n	80002de <SystemInit+0xce>
 80002da:	3b01      	subs	r3, #1
 80002dc:	d1f8      	bne.n	80002d0 <SystemInit+0xc0>

    /* if fail */
    if(0U == (RCU_CTL & RCU_CTL_HXTALSTB)){
 80002de:	4b2d      	ldr	r3, [pc, #180]	@ (8000394 <SystemInit+0x184>)
 80002e0:	f8d3 3800 	ldr.w	r3, [r3, #2048]	@ 0x800
 80002e4:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 80002e8:	d100      	bne.n	80002ec <SystemInit+0xdc>
        while(1){
 80002ea:	e7fe      	b.n	80002ea <SystemInit+0xda>
        }
    }
         
    RCU_APB1EN |= RCU_APB1EN_PMUEN;
 80002ec:	4b29      	ldr	r3, [pc, #164]	@ (8000394 <SystemInit+0x184>)
 80002ee:	f8d3 2840 	ldr.w	r2, [r3, #2112]	@ 0x840
 80002f2:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80002f6:	f8c3 2840 	str.w	r2, [r3, #2112]	@ 0x840
    PMU_CTL |= PMU_CTL_LDOVS;
 80002fa:	4928      	ldr	r1, [pc, #160]	@ (800039c <SystemInit+0x18c>)
 80002fc:	680a      	ldr	r2, [r1, #0]
 80002fe:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8000302:	600a      	str	r2, [r1, #0]

    /* HXTAL is stable */
    /* AHB = SYSCLK */
    RCU_CFG0 |= RCU_AHB_CKSYS_DIV1;
 8000304:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8000308:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
    /* APB2 = AHB/2 */
    RCU_CFG0 |= RCU_APB2_CKAHB_DIV2;
 800030c:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8000310:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8000314:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
    /* APB1 = AHB/4 */
    RCU_CFG0 |= RCU_APB1_CKAHB_DIV4;
 8000318:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 800031c:	f442 52a0 	orr.w	r2, r2, #5120	@ 0x1400
 8000320:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808

    /* Configure the main PLL, PSC = 25, PLL_N = 400, PLL_P = 2, PLL_Q = 9 */ 
    RCU_PLL = (25U | (400U << 6U) | (((2U >> 1U) - 1U) << 16U) |
 8000324:	4a1e      	ldr	r2, [pc, #120]	@ (80003a0 <SystemInit+0x190>)
 8000326:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
                   (RCU_PLLSRC_HXTAL) | (9U << 24U));

    /* enable PLL */
    RCU_CTL |= RCU_CTL_PLLEN;
 800032a:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 800032e:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 8000332:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800

    /* wait until PLL is stable */
    while(0U == (RCU_CTL & RCU_CTL_PLLSTB)){
 8000336:	461a      	mov	r2, r3
 8000338:	f8d2 3800 	ldr.w	r3, [r2, #2048]	@ 0x800
 800033c:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8000340:	d0fa      	beq.n	8000338 <SystemInit+0x128>
    }
    
    /* Enable the high-drive to extend the clock frequency to 200 Mhz */
    PMU_CTL |= PMU_CTL_HDEN;
 8000342:	4a16      	ldr	r2, [pc, #88]	@ (800039c <SystemInit+0x18c>)
 8000344:	6813      	ldr	r3, [r2, #0]
 8000346:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800034a:	6013      	str	r3, [r2, #0]
    while(0U == (PMU_CS & PMU_CS_HDRF)){
 800034c:	6853      	ldr	r3, [r2, #4]
 800034e:	f413 3f80 	tst.w	r3, #65536	@ 0x10000
 8000352:	d0fb      	beq.n	800034c <SystemInit+0x13c>
    }
    
    /* select the high-drive mode */
    PMU_CTL |= PMU_CTL_HDS;
 8000354:	4a11      	ldr	r2, [pc, #68]	@ (800039c <SystemInit+0x18c>)
 8000356:	6813      	ldr	r3, [r2, #0]
 8000358:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800035c:	6013      	str	r3, [r2, #0]
    while(0U == (PMU_CS & PMU_CS_HDSRF)){
 800035e:	6853      	ldr	r3, [r2, #4]
 8000360:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 8000364:	d0fb      	beq.n	800035e <SystemInit+0x14e>
    } 
    
    /* select PLL as system clock */
    RCU_CFG0 &= ~RCU_CFG0_SCS;
 8000366:	4b0b      	ldr	r3, [pc, #44]	@ (8000394 <SystemInit+0x184>)
 8000368:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 800036c:	f022 0203 	bic.w	r2, r2, #3
 8000370:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
    RCU_CFG0 |= RCU_CKSYSSRC_PLLP;
 8000374:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8000378:	f042 0202 	orr.w	r2, r2, #2
 800037c:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808

    /* wait until PLL is selected as system clock */
    while(0U == (RCU_CFG0 & RCU_SCSS_PLLP)){
 8000380:	461a      	mov	r2, r3
 8000382:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8000386:	f013 0f08 	tst.w	r3, #8
 800038a:	d0fa      	beq.n	8000382 <SystemInit+0x172>
}
 800038c:	b002      	add	sp, #8
 800038e:	4770      	bx	lr
 8000390:	e000ed00 	.word	0xe000ed00
 8000394:	40023000 	.word	0x40023000
 8000398:	24003010 	.word	0x24003010
 800039c:	40007000 	.word	0x40007000
 80003a0:	09406419 	.word	0x09406419

080003a4 <Reset_Handler>:
 80003a4:	4906      	ldr	r1, [pc, #24]	@ (80003c0 <Reset_Handler+0x1c>)
 80003a6:	4a07      	ldr	r2, [pc, #28]	@ (80003c4 <Reset_Handler+0x20>)
 80003a8:	4b07      	ldr	r3, [pc, #28]	@ (80003c8 <Reset_Handler+0x24>)
 80003aa:	1a9b      	subs	r3, r3, r2
 80003ac:	dd03      	ble.n	80003b6 <Reset_Handler+0x12>
 80003ae:	3b04      	subs	r3, #4
 80003b0:	58c8      	ldr	r0, [r1, r3]
 80003b2:	50d0      	str	r0, [r2, r3]
 80003b4:	dcfb      	bgt.n	80003ae <Reset_Handler+0xa>
 80003b6:	f7ff ff2b 	bl	8000210 <SystemInit>
 80003ba:	f000 f809 	bl	80003d0 <main>
 80003be:	4770      	bx	lr
 80003c0:	0800049c 	.word	0x0800049c
 80003c4:	20000000 	.word	0x20000000
 80003c8:	2000000c 	.word	0x2000000c

080003cc <ADC_IRQHandler>:
 80003cc:	e7fe      	b.n	80003cc <ADC_IRQHandler>
 80003ce:	bf00      	nop

080003d0 <main>:
int main(void)
{

    // systick_config();
    // led_init();
    while(1) {
 80003d0:	e7fe      	b.n	80003d0 <main>
	...

080003d4 <atexit>:
 80003d4:	2300      	movs	r3, #0
 80003d6:	4601      	mov	r1, r0
 80003d8:	461a      	mov	r2, r3
 80003da:	4618      	mov	r0, r3
 80003dc:	f000 b81e 	b.w	800041c <__register_exitproc>

080003e0 <__libc_fini_array>:
 80003e0:	b538      	push	{r3, r4, r5, lr}
 80003e2:	4d07      	ldr	r5, [pc, #28]	@ (8000400 <__libc_fini_array+0x20>)
 80003e4:	4c07      	ldr	r4, [pc, #28]	@ (8000404 <__libc_fini_array+0x24>)
 80003e6:	1b2c      	subs	r4, r5, r4
 80003e8:	10a4      	asrs	r4, r4, #2
 80003ea:	d005      	beq.n	80003f8 <__libc_fini_array+0x18>
 80003ec:	3c01      	subs	r4, #1
 80003ee:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 80003f2:	4798      	blx	r3
 80003f4:	2c00      	cmp	r4, #0
 80003f6:	d1f9      	bne.n	80003ec <__libc_fini_array+0xc>
 80003f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80003fc:	f000 b846 	b.w	800048c <_fini>
 8000400:	2000000c 	.word	0x2000000c
 8000404:	20000008 	.word	0x20000008

08000408 <register_fini>:
 8000408:	4b02      	ldr	r3, [pc, #8]	@ (8000414 <register_fini+0xc>)
 800040a:	b113      	cbz	r3, 8000412 <register_fini+0xa>
 800040c:	4802      	ldr	r0, [pc, #8]	@ (8000418 <register_fini+0x10>)
 800040e:	f7ff bfe1 	b.w	80003d4 <atexit>
 8000412:	4770      	bx	lr
 8000414:	00000000 	.word	0x00000000
 8000418:	080003e1 	.word	0x080003e1

0800041c <__register_exitproc>:
 800041c:	b470      	push	{r4, r5, r6}
 800041e:	4d16      	ldr	r5, [pc, #88]	@ (8000478 <__register_exitproc+0x5c>)
 8000420:	682c      	ldr	r4, [r5, #0]
 8000422:	b31c      	cbz	r4, 800046c <__register_exitproc+0x50>
 8000424:	6865      	ldr	r5, [r4, #4]
 8000426:	2d1f      	cmp	r5, #31
 8000428:	dc23      	bgt.n	8000472 <__register_exitproc+0x56>
 800042a:	b938      	cbnz	r0, 800043c <__register_exitproc+0x20>
 800042c:	1cab      	adds	r3, r5, #2
 800042e:	3501      	adds	r5, #1
 8000430:	6065      	str	r5, [r4, #4]
 8000432:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8000436:	2000      	movs	r0, #0
 8000438:	bc70      	pop	{r4, r5, r6}
 800043a:	4770      	bx	lr
 800043c:	eb04 0c85 	add.w	ip, r4, r5, lsl #2
 8000440:	2802      	cmp	r0, #2
 8000442:	f8cc 2088 	str.w	r2, [ip, #136]	@ 0x88
 8000446:	f8d4 6188 	ldr.w	r6, [r4, #392]	@ 0x188
 800044a:	f04f 0201 	mov.w	r2, #1
 800044e:	fa02 f205 	lsl.w	r2, r2, r5
 8000452:	ea46 0602 	orr.w	r6, r6, r2
 8000456:	f8c4 6188 	str.w	r6, [r4, #392]	@ 0x188
 800045a:	f8cc 3108 	str.w	r3, [ip, #264]	@ 0x108
 800045e:	d1e5      	bne.n	800042c <__register_exitproc+0x10>
 8000460:	f8d4 318c 	ldr.w	r3, [r4, #396]	@ 0x18c
 8000464:	4313      	orrs	r3, r2
 8000466:	f8c4 318c 	str.w	r3, [r4, #396]	@ 0x18c
 800046a:	e7df      	b.n	800042c <__register_exitproc+0x10>
 800046c:	4c03      	ldr	r4, [pc, #12]	@ (800047c <__register_exitproc+0x60>)
 800046e:	602c      	str	r4, [r5, #0]
 8000470:	e7d8      	b.n	8000424 <__register_exitproc+0x8>
 8000472:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000476:	e7df      	b.n	8000438 <__register_exitproc+0x1c>
 8000478:	20000028 	.word	0x20000028
 800047c:	2000002c 	.word	0x2000002c

08000480 <_init>:
 8000480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000482:	bf00      	nop
 8000484:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000486:	bc08      	pop	{r3}
 8000488:	469e      	mov	lr, r3
 800048a:	4770      	bx	lr

0800048c <_fini>:
 800048c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800048e:	bf00      	nop
 8000490:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000492:	bc08      	pop	{r3}
 8000494:	469e      	mov	lr, r3
 8000496:	4770      	bx	lr

08000498 <__EH_FRAME_BEGIN__>:
 8000498:	0000 0000                                   ....
